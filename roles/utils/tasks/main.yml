---
- name: Add rotarymars to docker group
  ansible.builtin.shell: |
    sudo gpasswd -a rotarymars docker

- name: Add rotarymars to video group
  ansible.builtin.shell: |
    sudo gpasswd -a rotarymars video

- name: Add rotarymars to dailout group
  ansible.builtin.shell: |
    sudo gpasswd -a rotarymars dialout

- name: Replace capslock to ctrl
  ansible.builtin.shell: |
    sudo sed -i 's/^XKBOPTIONS=.*/XKBOPTIONS="ctrl:nocaps"/' /etc/default/keyboard

# - name: install lazygit
  # ansible.builtin.shell: |
    # LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | \grep -Po '"tag_name": *"v\K[^"]*')
    # curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/download/v${LAZYGIT_VERSION}/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"
    # tar xf lazygit.tar.gz lazygit
    # sudo install lazygit -D -t /usr/local/bin/

- name: Add source .my-bashrc if not written
  ansible.builtin.lineinfile:
    path: ~/.bashrc
    line: "source ~/.my-bashrc"

- name: Copy .my-bashrc
  ansible.builtin.template:
    src: ".my-bashrc"
    dest: "~/.my-bashrc"

- name: Copy lazygit's config.yml
  ansible.builtin.template:
    src: "lazygit_config.yml"
    dest: "~/.config/lazygit/config.yml"

- name: Add source .my-zshrc if not written
  ansible.builtin.lineinfile:
    path: ~/.zshrc
    line: "source ~/.my-zshrc"

- name: Copy .my-zshrc
  ansible.builtin.template:
    src: ".my-zshrc"
    dest: "~/.my-zshrc"

- name: Copy .hotspot_config.zsh
  ansible.builtin.template:
    src: "hotspot_config.zsh"
    dest: "~/.hotspot_config.zsh"

- name: Fetch neovim config
  ansible.builtin.git:
    repo: https://github.com/rotarymars/neovim-setup
    dest: "~/.config/nvim"
    update: yes

- name: Fetch claude config
  ansible.builtin.git:
    repo: https://github.com/rotarymars/claude-templates
    dest: "~/.claude/commands"

- name: Add config for Apple's USB Superdrive
  become: true
  ansible.builtin.template:
    src: 60-apple-superdrive.rules
    dest: /etc/udev/rules.d/60-apple-superdrive.rules

- command: which delta
  register: result
  ignore_errors: true

- name: Install delta if needed
  ansible.builtin.shell: |
    aria2c 'https://github.com/dandavison/delta/releases/download/0.18.2/git-delta_0.18.2_amd64.deb'
    sudo dpkg -i ./git-delta_0.18.2_amd64.deb
    rm ./git-delta_0.18.2_amd64.deb
  when: result is failed

# - name: Check for cursor
#   ansible.builtin.shell: |
#     if [ -e "/opt/cursor/AppRun" ] && [ -x "/opt/cursor/AppRun" ]; then
#       exit 0
#     else
#       exit 1
#     fi
#   register: result
#   ignore_errors: true

# - name: Install cursor if needed
#   ansible.builtin.shell: |
#     sudo wget "https://downloads.cursor.com/production/61e99179e4080fecf9d8b92c6e2e3e00fbfb53f4/linux/x64/Cursor-0.48.9-x86_64.AppImage" -O /opt/cursor.AppImage
#   when: result is failed

# - name: Add execute privilege to cursor if needed
#   ansible.builtin.shell: |
#     sudo chmod +x /opt/cursor.AppImage

- name: Install zinit
  ansible.builtin.shell: |
    bash -c "$(curl --fail --show-error --silent --location https://raw.githubusercontent.com/zdharma-continuum/zinit/HEAD/scripts/install.sh)"